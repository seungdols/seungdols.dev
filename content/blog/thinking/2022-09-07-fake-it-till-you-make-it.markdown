---
layout: post
title: '“Fake it till you make it”의 함정"'
description: '그 연차에 꼭 다 알아야 할까?'
date: 2022-09-07 23:59:00
category: thinking
tags: [thinking, programming]
comments: true
draft: false
---

원본은 아래 트위터에서 남긴 글입니다. 혼자만의 생각이라, 문체가 불편할 수 있는 점 사전에 사과 드립니다.

아래의 내용은 모두 어쭙잖은 내용일 수 있습니다. 모든 분들에게 도움이 되지 않을 수 있는 내용임을 밝힙니다.

“Fake it till you make it”
문구는 내 예전 jeykll blog 문구였는데 어느 순간 나는 이게 불가능하다는 것을 알게 되었다.

그래서 그냥 늘 “전 잘 모르는데”를 달고 살고, 상대에게 내가 알던게 잘못된 거면 배웠다고 말하고 몰랐던걸 알게 되면 많이 배웠다고 말한다.

결과적으로 나한테 “그 연차에 어쩌네 저쩌네 하는 사람”이 있다면, 어차피 같이 일 안하면 그만이다. 연차를 떠나서 꼭 상대방이 아는 걸 다 알아야 할 필요는 없다. 난 여기서 협업의 시너지가 생성 되는 지점이라고 믿는다.

결과적으로 주니어가 보기에 어쭙짢아 보이는 시니어를 무시할 필요도, 시니어가 주니어를 존중해주지 못할 이유도 없어지는 지점이라고 생각한다. 다 같이 좋은 서비스의 특징을 합일화 하면 회사도 만족할만한 성과 아닐까?

다시 돌아가 명문장인 “Fake it till you make it”은 과연 실행 가능한 말일까?
이 부분이 실행 가능하려면, 애초에 능력이 어느 정도 되는 프로그래머여야 된다는 것이다.

결과적으로 아직 해보지 않았지만, 지금까지의 경험치로 봤을때 직관이 생긴 시점에나 말할 수 있는 말인 것이라 생각 한다.

주니어, 시니어 모두 통틀어서 직접 코드로 찍먹 해보지 않았다면, 일단 아닐 가능성이 있다는 것을 염두해두고 말하는 것이 서로에게 유익하다.
최근까지만 해도 추측의 말로 "이럴 것이다."라는 언어를 많이 써온 나부터 반성하게 되는 지점이다. 결과적으로는 좋은 프로그래머는 뭐든 찍먹을 해본자이다.

그래야 경험치가 쌓이고, 직관이 생긴다. 물론 그 직관 조차도 검증을 해보는게 "좋은 프로그래머"아닐까 싶다.

https://twitter.com/seungdols/status/1567191947160465409?s=20&t=1r5ep09f6-zKBxVjEDZF5A
