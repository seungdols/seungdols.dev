---
layout: post
title: '그냥 저냥 #위클리뉴스 #38'
description: '그냥 저냥 #위클리뉴스 #38'
date: '2019-04-06 23:06'
tags: [programming, weekly-news]
category: 'weekly-news'
comments: true
draft: false
---

- [파일럿 프로젝트를 통한 배치경험기! - 우아한형제들 기술 블로그](http://woowabros.github.io/experience/2019/03/31/pilot-batch.html): 우아한 형제들에서 일하게 된 신입 개발자가 겪은 Batch 개발에 관한 이야기인데, 주니어 개발자들이 읽기에 좋다고 생각하는데, 그 이유는 유성님이 어떻게 개발해야할지? 잘 쪼개어둔 점을 볼 수 있다는 점이 좋다고 생각한다. 학생이신 분들 혹은 신입 개발자들이 Batch Job은 어떻게 구성해야 하는지에 관해서 알 수 있는 글이고, 쉽게 정리가 되어 있다.

- [일급 컬렉션 (First Class Collection)의 소개와 써야할 이유](https://jojoldu.tistory.com/412): Java 관련 글을 많이 써주시는 동욱님인데, 이번 글은 정말 필히 읽어야 한다고 생각하는게, 객체지향관점에서도 이렇게 프로그래밍 하는 것이 더 좋구나!를 느끼게 해준다는 점이다. 그리고 Java의 **final**은 재할당을 막는다는 사실을 다시 한 번 깨닫게 된다. (불변이 아니라는 것에 밑줄! 돼지꼬리 땡땡!) 나도 놓치고 있던 일급 컬렉션은 개발 할 때, 진짜 좋은 방법이라고 생각하게 되었다.

- [OKKY | 초보가 이해하는 스프링 시큐리티](https://okky.kr/article/382738): 예전에 잠깐 살펴 본 느낌은 생각보다 적용하기 어려운 느낌을 받게 해준 스프링 시큐리티! 그런데, 잠만보라는 글쓴이분께서 정말 세세하게 설명을 해주시면서 어떻게 적용해야 하는지 정리 해주신 글이다.

### Node.js

- [nodejs의 내부 동작 원리 (libuv, 이벤트루프, 워커쓰레드, 비동기)](https://sjh836.tistory.com/149): 노드의 이벤트 루프에 관한 이야기인데, 정말 세세하게 코드까지 직접 분석하셔서 쓰신 글이다. **libuv**와 같은 어려운 커널 함수관련해서 쉽게 설명하고 계신다. 그리고 실제 노드 소스코드의 코어부분을 말씀하시면서 파일시스템 관련해서도 진짜 비동기인지? 아닌지?에 대해 설명해주신다. (정말, 깊은 지식을 가지신 분이라 생각이 들었다.)

### JavaScript

- [JavaScript(jQuery) - position sticky IE polyfill(폴리필) 방법](https://moonformeli.tistory.com/24): `position: sticky`에 관련한 내용인데, 손쉽게 적용하는 방법을 알 수 있고, `ES6`의 방법, `jQuery`를 이용한 코드도 소개하고 있다.

### React

- [5 React Performance Tips](https://medium.com/@wesharehoodies/5-react-performance-tips-f6e65295fba5): 이미 많은 사람들이 알고 있는 팁들이지만, *React.Memo*는 사실 잘 몰랐던 기능인데, *PureComponent*와 동일한데, 함수 컴포넌트로 생각하면 될 것 같다. 그리고, 그 외에 *React.lazy*가 인상깊다.

### 일반적인

- [토스, 유니콘에서 데카콘으로 가는 교차로에 서다](https://platum.kr/archives/118740): 가만히 생각해보면, 토스를 지휘하는 대표의 비전이 참 명확하고, 철두철미하다는 생각을 하게 된다. 쉽지 않은 상황이 있어도 꾸준하게 밀어 붙이고, 준비함으로써 송금의 편리성을 가져다 준 기업이자, 핀테크의 시발점을 만들어낸 회사가 아닌가?라는 생각을 하게 만든다. 그런데, 이제는 토스뱅크 컨소시엄을 구축한다고 한다. 과연 이 컨소시엄이 얼마나 큰 영향력을 행사하고, 또 다른 Bank Culture를 만들어나갈지 궁금해진다. 물론 토스가 디자인에도 관심을 많이 쓰고, 좋은 편리성을 가져다 주는 점에서 대표의 비전이 명확해서 토스라는 회사가 어떻게 앞으로 발전할지 궁금해진다. 토스와 토스 뱅크 모두 핀테크의 주춧돌이 되어 가지 않을까? 생각하게 된다.

### 개발자에게 도움이 되는

- [[번역] 웹 아키텍쳐 입문](https://blog.rhostem.com/posts/2018-07-22-web-architecture-101): 기본적인 아키텍쳐의 내용이고, 개발자라면 알아야 하는 지식이라고 할 수 있으나, 잘 모르는 지식도 분명 있다고 본다. Job Queue의 개념이라던지? CDN이라던지?하는 구조말이다. 읽어보면 도움이 된다.

- [SI 개발자, 불나방이 되거나 자토이치가 되거나](http://blog.hwang.gg/20190327/?fbclid=IwAR3D5pT96m1Bk4GEDJvUCpgaAT0moSM-eDoN361iEz8GKGMQRdB6hKzLEJM): SI/SM에서 내가 일하느냐가 중요한것이 아니라 내가 어떤 사람으로 영향력을 행사할 수 있을까?에 대해 초점을 맞춰야 한다고 생각하는 편인데, 이 글을 쓰신 분과 동일한 생각을 가지고 있다. 이 본문에 나오는 말중에 결국 어디서 일하건 중요한 것은 **여러가지 제약 사항속에서도 스스로를 갈고 닦고 부단한 노력을 통해 자토이치처럼, 네임드라 칭해도 될 만큼 뛰어난 개발자를 드물긴 하지만 봤다**이 문장이 제일 중요하지 않을까 생각한다. 결국 내가 성장하는데 내가 속한 곳이 무엇이 얼마나 중요할까?라는 생각을 하게 된다. 특히나 주니어 개발자계의 네임드 창천향로님이신 이동욱님도 부단한 노력 끝에 지금 현재의 회사에서 일을 하고 계시고, 어떻게 이직을 했는지?에 대해서도 상세하게 글을 써주셨다. 간절함과 노력은 결코 당신을 배신하지 않는다.

- [알고리즘 공부, 어떻게 해야하나요?](https://baactree.tistory.com/52): 알고리즘 공부를 어떻게 해야 할지? 갈피조차 잡지 못하는 사람들이 읽어보면 좋을 글이다.

- [해외 취업 - 신입 웹 개발자의 싱가포르 상륙기](https://sujinlee.me/how-i-landed-my-dream-job-in-sg/): 본래 개발자가 아니셨으나, 개발에 관심이 많으셨던 이수진님의 개발자 해외 취업기에 대한 *후기*글이다. 수진님은 원래 블로그를 통해 개발 관련 영문서들을 많이 번역해주셨다. 그리고 이제는 **개발자**로써 일하시게 되었는데, 역시..영어를 잘하셔서 그런지..바로 해외 취업을 하셨다. 개발을 꼭 학교에서만 배워야 하는 것은 아니라는 생각이 들었다. 그저 노력과 관심도의 차이일뿐인 것이다.

- [개념 정리 - (7) 운영 체제편](https://brunch.co.kr/@toughrogrammer/15): 대학교의 운영체제 수업을 들어본 사람들은 많이 봤을법한 내용과 유닉스 프로그래밍 수업을 들으면 알 수 있는 내용까지 총망라하여 운영체제, 파일시스템등에 관한 내용을 상세하게 정리 해두 신 글이다.

- [캐시가 동작하는 아주 구체적인 원리](https://parksb.github.io/article/29.html): 글 쓰신 분이 상당히 유명하신 분인데, 글을 정리 한 것 또한 정말 기가 막히게 정리를 잘 해주셨다. 캐시에 관련한 컴퓨터 구조 관점에서의 정리 글인데, 캐시 히트, 캐시 미스등 용어설명과 어떻게 캐시가 동작하는 지에 대한 설명과 함께 그림으로 설명을 함으로써 쉽게 이해가 가능하다.

- [[번역]쉬운 테스트 주도 개발과 단위 테스트를 위한 5단계 방법론](https://medium.com/@cmygray/%EB%B2%88%EC%97%AD-%EC%89%AC%EC%9A%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C%EA%B3%BC-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-5%EB%8B%A8%EA%B3%84-%EB%B0%A9%EB%B2%95%EB%A1%A0-b82fea6c8d90?source=linkShare-18076cc6cf32-1554427405&_branch_match_id=571657021453692501): 테스트 주도 개발은 생각보다 어려운 일이 아닐 수 있다. 우리가 프로그래밍을 하는 것을 작게 작게 빨리 피드백을 얻는 방법이라 생각하면 쉬울 것 같다는 느낌을 받았다. 고로, 테스트를 짜는 것을 시작하는 것이 TDD로 가는 것이라 생각하게 되었다. TDD를 어떻게 시작 해야 할지 모르겠다!라고 한다면, 이 글을 읽어보면 좋겠다.

- [D사 인터뷰 문제](https://docs.google.com/document/d/10bJK8S4T7sBIP-pzdQm9xRpW0HcLsrh6D047pE_kFE8/edit?fbclid=IwAR1Hs3JcBfMjgMJBoSVsi8t0nD8MRjh5CIOKPtdkjKuUhDMyK9cXnMbCtUs): 머신러닝에 관한 인터뷰 문제인데, 여러 관련된 지식 문제도 많이 있다. (영어)

- [소프트웨어 엔지니어가 되는 법](https://imasoftwareengineer.tistory.com/2): 자신만의 발자취를 알 수 있는 회고록 형태의 글이 많을 수록 앞으로 주니어 개발자가 될 사람들에게 많은 방향성을 줄 수 있기에 좋은 주제라고 생각하는데, 어떻게 공부를 시작하게 되었고, 어떻게 노력했는지를 알 수 있는 글이다. 그래서 꼭 읽어 보셨으면 하는 글이 이런 어떻게 엔지니어가 되었는지?에 대한 글이다.

- [소프트웨어 엔지니어 코딩 인터뷰 준비하기 (미국)](https://imasoftwareengineer.tistory.com/66?category=768151): 코딩 인터뷰에 관한 설명과 함께 종류를 상세하게 설명하고 있다. 그리고 어떻게 공부를 해야 하는지에 대해서도 정리를 잘 해주시고, 직접 화이트 보드 코딩 테스트를 어떻게 연습 하는지도 직접 연습사진을 찍어 설명을 해주셨는데, 정말 많은 연습을 하시는 게 느껴졌다. 나도 이직을 하게 되는 순간이 온다면, 이렇게 좀 절실하게 연습을 해야 이직?성공을 하지 않을까 싶다.

### SQL

- [[SQL] WHERE 기능, 성능향상 팁 **\***](https://link2me.tistory.com/544): SQL을 왜 쓰냐? 아직도 쓰냐?라고 할 수 있지만, 뗄래야 뗄 수 없는 개발자의 기본으로 꼽히는데, 자주 봐야 까먹지 않는 것 같다. 그 중에서 성능을 향상하는데 중요한 열쇠를 가진 **WHERE**에 대해 궁금하다면, 이 글을 읽어보는 것을 추천 한다. 그리고 더 많은 검색을 통한 학습이 필요로 하다고 생각한다. (저에겐 SQL이 어렵기 때문에...)
