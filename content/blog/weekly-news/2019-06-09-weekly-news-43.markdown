---
layout: post
title: '그냥 저냥 #위클리뉴스 #43'
description: '그냥 저냥 #위클리뉴스 #43'
date: 2019-06-09 22:55:02
category: weekly-news
tags: [weekly-news, programming]
comments: true
draft: false
---

### React

- [setState를 바르게 사용하는 방법](https://blog.grotesq.com/post/728): 결국에는 Docs를 지속적으로 참조하는 방법이 가장 잘 활용하는 방법이라 생각을 하게 되었다. 버전별로 업데이트 될 때마다 다시 처음으로 돌아가 문서를 확인하자. 결국, 기본은 Document다.

- [컴포넌트 제대로 만들기](https://hyunseob.github.io/2019/06/02/react-component-the-right-way/): 가고 싶었던 부트캠프 강의 였는데, 강의 자료가 올라와서 읽다보니 깊고 자세한 내용이라 분명 나와 같은 React를 입문하는 사람들에게 도움이 있을 것이라 생각 되었다. 컴포넌트를 어떻게 구성해야 하는지? 실제 예시를 통해 설명하고 있는 글이다.

- [자바스크립트 테스팅의 기초](https://velog.io/@velopert/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8C%85%EC%9D%98-%EA%B8%B0%EC%B4%88)

- [TDD의 소개](https://velog.io/@velopert/TDD%EC%9D%98-%EC%86%8C%EA%B0%9C)

- [리액트 테스트의 소개](https://velog.io/@velopert/%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%86%8C%EA%B0%9C)

- [Enzyme 을 사용한 리액트 컴포넌트 테스트](https://velog.io/@velopert/react-testing-with-enzyme)

- [react-testing-library 를 사용한 리액트 컴포넌트 테스트](https://velog.io/@velopert/react-testing-library)

- [react-testing-library 를 사용하여 TDD 개발 흐름으로 투두리스트 만들기](https://velog.io/@velopert/tdd-with-react-testing-library)

- [react-testing-library 의 비동기작업을 위한 테스트](https://velog.io/@velopert/react-testing-library-%EC%9D%98-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%9E%91%EC%97%85%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8)

- velopert님의 테스트 시리즈 글인데 `JavaScript` 테스트부터, `TDD`의 소개, `React`의 테스트를 위한 `Enzyme`, `react-testing-library`를 설명과 함께 비교하고 있다.

- [redux-saga와 typescript 편하게 사용하기](https://jonir227.github.io/develop/2019/06/04/redux-saga%EC%99%80-typescript-%ED%8E%B8%ED%95%98%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0.html) redux-thunk를 사용했었는데, 사실 예쁘게 사용하는 것은 아직도 어렵다. 그런데, redux-saga가 요즘은 좀 더 이해하기 쉽다고 생각하는 사람들이 많아 졌다고 생각한다. redux-saga와 typescript를 사용을 위해 두 가지의 내용에 대해 소개하는 글이다.

### Java

- [OKKY | 자바EE의 역사 및 스프링과의 관계](https://okky.kr/article/415474?fbclid=IwAR37OdUi_4AxnJtFv7mx2QOlloYgSf-b6V9Vhgy94JSTFKFBP3DDIyFJEOk) Spring Framework를 쓰는 사람이라면 들어본 적이 있을 EJB와 JavaEE에 관한 역사에 관해서 쓰여져있고, Spring Framework와 JavaEE와의 관계를 잘 설명한 글이다.

- [J2EE Development without EJB (1) - Why "J2EE Without EJB"?](http://toby.epril.com/?p=35) 위의 글과 비슷한 류의 글인데, Toby님이 쓰신 EJB 없이 J2EE 개발 시리즈의 글을 읽어보면 좋겠다. 나도 시간이 날때, 시리즈 전체 글을 읽어보려고 한다. 솔직히 이런 류의 내용은 오랜 시간이 지나도 이해가 가고, 앞으로 Spring 생태계를 이해하는데 도움을 많이 준다.

- [Spring Bean Scopes](https://www.javacodegeeks.com/2019/06/spring-bean-scopes.html) Spring framework의 Bean scope에 관한 내용인데, `Singleton, prototytpe, request, session, application` 총 5가지의 빈 스코프에 관하여 설명한 글이다.

### JavaScript

- [선언형으로 대체 가능한 문법들 정리](https://chodragon9.github.io/blog/declarative-function/) 요즈음 함수형 프로그래밍이라고 핫하지만, 결국 내포된 의미는 선언형에 가깝다고 해야 할까? 싶기도 하다. 그런데, JavaScript에서 흔하게 사용하는 Object, if-else, for/for-in 으로 표현된 부분을 map, reduxe, assign을 이용해 선언형 방식의 코드로 바꾸는 예시를 소개한다.

- [레거시 코드에서 이해하기 쉬운코드로 리팩토링 2](https://chodragon9.github.io/blog/legacy-code-to-easy-code-2/?fbclid=IwAR36l1UyswOZPDDz5F5tx7HJpfQx7_-uryY3wel-_8kwZlbk2WkSCNI8FW0) 코드 냄새가 나는 흔하게 볼 수 있는 코드들을 이해하기 쉬운 형태로 바꾸는 것을 소개하고 있는데, 확실히 좋은 부분들이 많고, `Object.assign`을 활용하는 방법, 깊은 배열 탐색 하는 것을 `some`을 이용하는 방법들이 특히, 좋았다.

### 개발자에게 도움이 되는

- [월간 개발자스럽다 #43](https://blog.gaerae.com/2019/05/monthly.html) 여러 종류의 글이 올라오는데, 이번 달의 월간 아티클들이 모여 있고, 내 블로그에서 다뤘던 글들도 있어서 나는 조금 더 여유롭게 내가 접하지 못했던 글을 접할 수 있었다.

- [스터디 모임 방법 몇 가지](http://agile.egloos.com/5830026?fbclid=IwAR3QwvuBLg2VUMJkXVvyMVOMS8Yr73Re_bXUNMfN64jm3Zb04v1bZU9q_XA) 스터디 방법은 **천차만별**이고, **사람들의 니즈의 정도 차**도 존재하는데, 그 속에서 어떻게 나는 학습을 할 것인가?에 대한 힌트를 주는 글이라 스터디를 자주 하거나, 할 예정이라면 참고하면 좋겠다.

- [내 맘대로 위클리 뉴스 - 2019년 22주(2019.5.27 - 2019.6.2)](https://www.sangkon.com/sigamdream_weekly_2019_22/) Java, Python, JavaScript에 관한 글이 올라오는데, 이번의 Java 항목에 해당하는 글 중에 가장 좋은 것은 Java8 - Java12의 feature가 정리가 된 글인데, Java를 주로 쓰는 분이라면 읽어보면 좋다고 생각이 들었다.

- [기술 뉴스 #127 : 19-06-01 :: Outsider's Dev Story](https://blog.outsider.ne.kr/1446) 개발 관련 여러 종류의 글이 올라오고, 유용한 프로젝트 소식, 라이브러리/프레임워크 버전 업데이트 정보도 공유를 해주신다. kube의 관한 내용도 있는데, MS에서 공개한 **Kubernetes Learning Path**라는 글이 좋은게, 50일 동안 kube의 어디부터 시작을 해야하고, 어떻게 공부를 해야 하는지 가이드 하는 글이 좋았다. 사실, 나도 배우고 싶은데, 이미 에코 시스템도 너무 많고, 어떻게 갈피를 잡아야 할지 모르겠더라. 그런 점에서 충분히 도움이 된다.

- [150일동안 내가 배운 것들 -1 - 소소로그](https://sosolog.netlify.com/posts/what-i-learn-150-1) 150여일동안 입사를 하여, 배운 소소한 내용으로 볼 수 있지만, 솔직히 이렇게 정성스럽고, 조심스럽게 접근 하는 동료라면 분명 꼼꼼하고 실수를 잘 하지 않는 분이지 않을까? 라는 생각이 들었고, 열정이 있는 분이라 과연 나는 이만한 열정이 있는지 자문하게 되었다. 특히, _문서화를 선택이 아니다._ 라는 말이 인상 깊었고, 공감이 많이 되었다.

- [구글로 잘 검색하기 - 소소로그](https://sosolog.netlify.com/posts/googling) 위 글을 읽다가 같은 블로거의 다른 종류의 글인데, 특히 _어떻게 원하는 것을 검색하는가?_ 라는 방법에 대한 해답이지 않을까?라는 생각을 하게 만드는 글을 찾게 되어 공유 한다. 이런 개개인의 노하우가 있는 것은 굉장히 중요하다. 꼭 줍줍하여 내 것으로 만들자.

- [[인터뷰] 경력 18년 차 개발자의 하루 일상은 어떨까요? - NBP 개발자 장창환 님의 인터뷰 -](https://m.blog.naver.com/PostView.nhn?blogId=n_cloudplatform&logNo=221531503581&proxyReferer=http%3A%2F%2Fm.facebook.com)

- [[인터뷰] 열등생에서 네이버 클라우드 플랫폼 신입 개발자가 되기까지! - NBP 신입 개발자 정승주 님 인터뷰-](https://m.blog.naver.com/PostView.nhn?blogId=n_cloudplatform&logNo=221531518188&proxyReferer=https%3A%2F%2Fm.blog.naver.com%2FPostView.nhn%3FblogId%3Dn_cloudplatform%26logNo%3D221531503581%26proxyReferer%3Dhttp%253A%252F%252Fm.facebook.com)

### Kubernetes

- [NAVER D2](https://d2.naver.com/helloworld/7861046) Telepresence를 이용해, kube 클러스터에서 실행할 어플리케이션을 로컬에서 개발하는 방법에 관한 글인데, 사실, 처음 kube를 접한다면, 어렵고 복잡한 내용일 수 있는데, 천천히 읽다 보면 예시를 가이드 하고 있기에 쉽게 이해 할 수 있다.

### 일반적으로 도움이 되는

- [지식의 가난에는 이자가 붙는다](https://brunch.co.kr/@lemontia/21) 지식의 가난에는 이자가 붙는 다는 말이, 참으로 무섭다고 느껴졌다. 요즘 나의 생각은 하나같았다. 나는 무엇을 잘하는 사람인가? 그런 생각이 들었는데, 이 글을 읽으면서 아! 나도 항상 느끼고 있던 부분이구나. 그런데, 나는 왜 행하는 것이 좀 부족할까? 그런 답을 얻었다. 결국, 내가 어떤 라이브러리 공부에 들이는 것도 비록 그 기술이 사라져도 남는 것이 있다는 깨달음이다. 특히, 원론적인 지식들, 영어/수학 등과 같은 것들은 무조건 나에게 남는다. 비록, 내가 일 하면서 쓰지 않을지언정, 언젠가 필요로 하다는 것이다. 나는 올 연말에 어떤 회고를 쓸지? 걱정이 되기도 하고, 기대가 되기도 한다. 아직 6개월이 남았으니까, 다시 작심삼일을 해보자. 작심삼일을 100번하면 일년을 넘게 노력하며 사는 것이라는 글도 보았다. 결국 행하는 것은 남는다.

- [직장인 자기계발에 관한 개인적 팁](https://brunch.co.kr/@taeherself/62) 직장인 자기계발에 관한 팁에 관한 글인데, 읽어보면 도움이 많이 된다. **시간이 없는 게 아니라, 시간을 내지 못해서** 라는 말이 있다. 자기계발을 하려거든 결국 시간이 중요한데, 나의 하루 중 어떤 시간을 할애할 것인지?가 관건이지 않나? 라는 생각을 한다. 야근을 점차 줄여서 나도 훈련하는 시간을 지속적으로 만들어야겠다는 생각을 하게 되었다.
