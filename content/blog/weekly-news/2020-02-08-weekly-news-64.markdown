---
layout: post
title: '그냥 저냥 #위클리뉴스 #64'
description: '그냥 저냥 #위클리뉴스 #64'
date: 2020-02-08 23:10:00
category: weekly-news
tags: [weekly-news, programming]
comments: true
draft: false
---

### 💻개발자들이 읽어보면 좋을

[SSH 프로토콜과 Tunneling 이해하기](https://swalloow.github.io/ssh-tunneling)

- `SSH 프로토콜과 터널링`에 관한 자세한 글인데, 읽어 보면 좋다. `SSH 프로토콜이 MAC알고리즘`을 쓰는 건 처음 알게 되었다.

[Git Workflow | Atlassian Git Tutorial](https://www.atlassian.com/git/tutorials/comparing-workflows)

- 팀원분이 공유해준 `git workflow`에 관한 글인데, 상당히 자세하게 써있고, `SVN`과 `GIT`을 비교하며 설명을 하고 있다. 물론, 현재는 `Git`을 정말 많이 쓰고 있다. `SVN`을 모르더라도, 읽어보면 좋겠다.

[UIUX가 서비스 기획을 망쳤다!](https://germweapon.tistory.com/379)

- 확실히 이 글에 대한 주장도 맞는 말이지만, 내 생각에는 항상 옳다고 생각하는 고정관념적인 부분들이 기획을 망친다고 생각한다. `UI/UX`가 서비스 기획을 망치는 것이 아니라, 전반적인 문제를 잘 포착해야 하는 것이 더 필요하다고 생각한다. `UI/UX`가 뛰어나다고 서비스가 잘 되거나, 트렌디함을 갖는 것은 아니라고 생각 한다. 결국서비스의 중요한 부분을 잘 파악 하는 것이 좋다고 보고, 따라 하지 않음의 미학도 좋다고 생각 한다.

[Writing Safe Shell Scripts](https://sipb.mit.edu/doc/safe-shell/)

- 쉘 스크립트를 작성 하다보면, 참 작성하기가 여간 까다롭다. 역시 다 방법은 있었다.

[인터넷이 동작하는 아주 구체적인 원리](https://parksb.github.io/article/36.html?fbclid=IwAR15UeD4WM0Z0TZ4TTjjKGIfR3qnQiXPdEKWh73_2uPaSP12Qi51QjSm-Dw)

- 인터넷이 작동하는 `TCP socket`이 지나가는 `네트워크, DNS, HUB, Router`에 대한 설명이 자세하게 쓰여 있다.

[[NDC16] Effective Git](https://www.slideshare.net/kexplo/ndc2016-effective-git)

- 솔직히 진짜 너무 정리가 잘 되어 있어서, 감탄 했다. 특히, `bisect`는 몰랐던 기능 중에 하나인데, 실제로 실무에서 `build CI`를 통과 했는데, 정상적인 실행에서는 오작동을 일으키는 커밋이 들어간 적이 있다. 그 커밋을 찾는데, 정말 많은 노력을 했다. 이번에 본 건 `worktree`인데, 상황상 쓸일이 정말 많았는데, 항상 stash를 썼다. 공부 해 봐야겠다.

[RESTful API 설계 가이드](https://sanghaklee.tistory.com/57)

- `RESTful API`에 대한 설계 가이드 글인데, 자세하게 나와 있어서 참고 하기 쉽다.

[Avoiding burnout as an ambitious developer - Stack Overflow Blog](https://stackoverflow.blog/2020/01/13/avoiding-burnout-as-an-ambitious-developer/)

- `번아웃 현상을 피하기 위해 다른 개발자들도 이렇게 했으면` 하는 마음에 글쓴이가 적어 본 글인데, 굉장히 좋은 구절이 많다. 결국 일은 무엇 때문에 하는지? 무엇으로 나는 하루를 보내는지? 제일 중요한 것 같다. 잊지 말자. 긴 여정을 하는 것인데, **빨리 뛰어갈 필요는 없다. 내 속도를 유지 하자.** 기술 학습에 대한 불안감을 가진 당신에게 꼭 필요한 글이다.

[CTO로 한해를 보내며 2019 회고](<[https://mayajuni.github.io/2020/01/28/CTO로-한해를-보내며-2019-회고/](https://mayajuni.github.io/2020/01/28/CTO%EB%A1%9C-%ED%95%9C%ED%95%B4%EB%A5%BC-%EB%B3%B4%EB%82%B4%EB%A9%B0-2019-%ED%9A%8C%EA%B3%A0/)>)

- CTO가 되면서, 그리고 겪으면서 느낀 **여러가지 생각과 고민들의 회고가 포함된 내용**이라 너무 중요한 내용이라고 생각 하고, 정독 했다. 근데 보통 이렇게 깨닫기 쉽지 않은데 **정말 많은 노력**을 하신 게 글 속에 녹아 있어 읽으면서 대단하다는 생각을 계속 했다.

[Scaling to 100k Users](https://alexpareto.com/scalability/systems/2020/02/03/scaling-100k.html)

- 사용자가 10만명이 될때까지의 시스템 설계에 관한 이야기인데, 아주 쉽게 잘 설명하고 있고, 어느 부분이 더 필요한지? 해당 `Layer`가 필요한 이유를 잘 설명한 글이다.

[스타트업 개발자 혼자 빠르게 싸게 서버 구축하기 - 1편 | Popit](https://www.popit.kr/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85-%EA%B0%9C%EB%B0%9C%EC%9E%90-%ED%98%BC%EC%9E%90-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EC%8B%B8%EA%B2%8C-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-1%ED%8E%B8/)

- 클라우드 보다 서버 호스팅이 더 저렴하구나를 깨닫게 되었다. 옛날에는 보통 많이 했던 방식인데, 클라우드 서버가 훨씬 싸다고 생각 했었다. 근데, 클라우드의 목적이 없다면 굳이 클라우드를 쓸 필요가 없구나를 또 한 번 생각하게 되었다. `기술을 사용하는 데에는 이유가 있어야 한다는 나의 개똥철학을 깜빡 했었다.`

[클라우드 디자인 패턴 - Azure Architecture Center](https://docs.microsoft.com/ko-kr/azure/architecture/patterns/)

- 클라우드 환경에서의 디자인 패턴인데, 사실 클라우드 디자인 패턴에 대해 나는 잘 알지 못한다. 회사에서 제공하는 플랫폼을 사용하고, 팀에서 인프라를 전담하고 있긴 하지만 모르는 분야다. 그럼에도 이렇게 MS에서 입문자를 위한 글들을 많이 제공 해주고 있어서 너무 좋다. :) 솔직히 가이드는 MS 개발자들이 최고..👍🏻

[](http://awesome-scalability.com/)

- 확장성을 가지는 시스템을 디자인 하기 위한 방법들은 무엇이 있을까? 그런 주제들이 정말 잘 정리 되어 있는 페이지이다. 요즘은 안티 캐싱 디자인에 대해 관심이 많다. 흔히 캐싱을 쉽게 생각하는데 오히려 병목이 될 수도 있다는 생각을 하는 요즘이다.

### Container

[Diving Deep Into Kubernetes Networking: Docker와 k8s 네트워크 분석](https://woohhan.github.io/study/k8s_networking_deep_diving/?utm_source=gaerae.com&utm_campaign=%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%8A%A4%EB%9F%BD%EB%8B%A4&utm_medium=social)

- 도커와 쿠버네티스의 네트워크에 대해 잘 정리 되어 있는 글이다. 사실 네트워크에 대한 기본 지식이 있어야 글을 읽는데 이해가 쉽다고 생각 한다.

### 🛠Java/Back-End

[Spring Batch와 Querydsl - 우아한형제들 기술 블로그](http://woowabros.github.io/experience/2020/02/05/springbatch-querydsl.html)

- `Spring Batch`에서 지원 하지 않는 `QuerydslItemReader`를 만들어 가는 부분을 보여 주는 글인데, 없으면 만들어 사용하는 `jojoldu`님의 경험기 공유 글이다. (`JPA`를 안 써본 나로써는 사실 좀 어렵게 느껴지기는 하지만, 요즘 안 쓰는 곳이 거의 없다지...) 관심이 있다면 읽어보면 좋겠다.

[캐치딜 백엔드 개발이야기 : 좌충우돌 서버운영 이야기](https://kbs4674.tistory.com/114)

- 서버를 어떻게 구성 할지? 그리고 어떤 프레임워크를 선정 하는지에 대해서도 고민 하는 흔적을 엿볼 수 있었고, `AWS` 상에서 `Ruby on Jets`를 쓰면서 발생한 어떤 어려움이 있었는지? 잘 써 있다.

[서버 사이드 테스트 자동화 여정 - 1. 테스트 자동화를 시작한 계기와 그 첫 발걸음 - LINE ENGINEERING](https://engineering.linecorp.com/ko/blog/server-side-test-automation-journey-1/)

- 테스트 자동화와 더불어서 `설정 테스트를 하는 것은 신선한 시각`이라고 생각 한다. 보통은 설정 테스트를 하진 않는다. 생각해보니 가끔 문제가 되는 경우가 있었다. 확실히 설정도 코드 관점으로 생각해보면, 테스트 하는 게 맞구나! 결론으로 도달.

### 🖱JavaScript/Front-End

[개발자를 위한 새로운 SameSite=None; 보안 쿠키 설정에 대비하기](https://developers-kr.googleblog.com/2020/01/developers-get-ready-for-new.html)

- 크롬 80에서 보안 쿠키 관련한 설정이 추가 되는데 이에 대한 설명 글이다. 아마 거의 대부분의 사이트에서 대비를 해야 한다...😭

[bradtraversy/vanillawebprojects](https://github.com/bradtraversy/vanillawebprojects)

- `바닐라JS`로 구성된 웹 프로젝트 리스트인데, 데모 영상까지 다 있기에 활용 하기 좋아 보인다.

[qkraudghgh/clean-code-javascript-ko](https://github.com/qkraudghgh/clean-code-javascript-ko/blob/master/README.md#%EB%AA%A9%EC%B0%A8)

- 클린 코드를 `JavaScript`에 접목시켜 한글로 예시 코드와 함께 쓰여 있는 글이다. 사실 클린 코드 책을 읽지 않아 어떤 내용이 있는지 몰랐는데, 이 글을 읽으면 어떤 내용이 있는지? 어렴풋이 알게 되지 않을까? 생각 했다.

[google/gts](https://github.com/google/gts?fbclid=IwAR3f3glyNhqyVb6E3VBnxsWQ4sYw_m7CSJ0J798WhEB0-q6KcxINljxkcJc)

- `Google TypeScript Style Guide`가 나왔다. 보통 `Airbnb`의 스타일을 많이 사용했는데, 이제 구글 스타일 가이드가 나오게 되어 어떤 걸 쓸지? 고민하면 될 것 같다. 뭐가 더 좋은지는 고민스럽다.

### 🛠Tool

[사용중인 VSCode(Visual Studio Code) 확장 플러그인 목록](https://junhobaik.github.io/vsc-plugin-list/)

- `VS Code editor Plugin`에 대한 추천 글인데, 굉장히 잘 정리 되어 있다.
