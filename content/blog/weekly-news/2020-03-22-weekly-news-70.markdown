---
layout: post
title: '그냥 저냥 #위클리뉴스 #70'
description: '그냥 저냥 #위클리뉴스 #70'
date: 2020-03-22 19:03:48
category: weekly-news
tags: [weekly-news, programming]
comments: true
draft: false
---

### 🖥개발자들에게 좋은

[[번역] 개발자를 위한 면접 지침](https://blog.rhostem.com/posts/2019-01-05-developer-guide-for-interview)

- `개발자들과 면접관` 모두에게 도움이 되는 글이라고 생각 한다.

[이렇게 기획하면 안 돼요! #회원가입](https://germweapon.tistory.com/384)

- `회원 가입에 대한 기획 가이드`를 알 수 있다. 하지만, 이 글이 꼭 정답은 아닐 것이다. 회원 가입 하나에도 수 많은 방식과 좋은 기능들이 추가 될 수 있다는 생각을 하게 되었다.

[Deno는 과연 NodeJS를 대체할 수 있을까?](https://www.youtube.com/watch?v=6MeB-IWq1I4&feature=youtu.be)

- 이미 많은 생태계를 이룩한 `Node.JS` 진영에 `Deno`가 출현하는 것은 좋은 현상이라고 본다. 아마, 확실하게 좋은 장점, 이식성만 확보된다면, 바로 쓰일 수 있을거라 생각 한다. (일단, 라이언 달이 두 언어의 창시자이기 때문 안정성은 확보 되었다고 생각 한다.)

[신입 개발자 면접 질문 시리즈](<[https://www.notion.so/54d624628a634c879cc93d94f54cd2d1](https://www.notion.so/54d624628a634c879cc93d94f54cd2d1)>)

- 면접 질문에 대해 정말 자세하게 잘 나와 있어서 `Java`를 주로 했다면 정독 하면 좋겠다. 그리고 Java가 주력이 아니여도 읽어보면 좋을 내용이 많다.

[그래서, ROP가 뭔데 씹덕아 (Railway oriented programming)](https://medium.com/@0e/%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%84%89%E1%85%A5-rop%E1%84%80%E1%85%A1-%E1%84%86%E1%85%AF%E1%86%AB%E1%84%83%E1%85%A6-%E1%84%8A%E1%85%B5%E1%86%B8%E1%84%83%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%A1-railway-oriented-programming-4e8070c04bda)

- `ROP`에 대해서는 무지했는데, 이 글을 보면 정말 이해하기 쉽다. 결국, 함수형 프로그래밍과 합성 지향 프로그래밍이 대세가 되지 않을까? 싶다.

[뉴모피즘은 새로운 UI 트렌드가 될 수 있을까?](https://brunch.co.kr/@cliche-cliche/32)

- [Flat Design](https://ppss.kr/archives/80638)이나 [Meterial Design](https://material.io/design/)이 거의 디자인의 표준이 된 상황에서 `뉴모피즘 UI에 글로 이 글을 읽으면서, 나는 오히려 이 부분이 현대 웹페이지에서 보고 싶은 미래 지향 디자인 같았다. (내 느낌만...)`

[재택근무 10가지 프로 팁](https://brunch.co.kr/@svillustrated/69)

- `에어비엔비에서 일하는 개발자 동료`분이 공유한 재택근무 팁에 대한 글입니다.

[조언을 해준다는 것](https://soraji.github.io/mind/2020/03/16/%EC%A1%B0%EC%96%B8%EC%9D%84%ED%95%B4%EC%A4%80%EB%8B%A4%EB%8A%94%EA%B2%83/)

- **한 때, 나도 조언병에 걸린적 있다.** 대학 동기가 전공을 하고도 다른 일을 하다가, 돌고 돌아 `이 일을 한다고 했을때, 진짜 하고 싶은지에 대해? 고민을 했으면 좋겠다`고 한 적이 있다. 생각해보면, 그저 응원만 해주면 되는 일인데, 요즘에 깨닫게 되었다. (사실, 그때나 지금이나 `동일한 생각은 자신이 정말 좋아하는 일인지?`가 중요하다고 생각 한다.)

[2.0 까지 해본 개발자](https://jojoldu.tistory.com/485)

- 이 글을 읽으면서 당근마켓 대표님의 어떤 혜안이 느껴진다. 이유 있는 기능 추가, 그리고 보수적인 기능 확장. 모두 맞는 말이다. 기능 추가는 누구나 다 할 수 있다. 중요한 건 그 기능이 `"왜 출시 되어야 하는지?` `정말 사용자에게 좋은지?"`를 생각하는 서비스에서 일 해보고 싶다는 생각이 요즘 정말 간절하다. 새로운 것만 해본 개발자도 나는 별로 좋아 하는 편이 아니다. `어떤 개발자도 레거시를 좋아하는 개발자는 없다. 여건이 되지 못해 기술 부채를 쌓았을 뿐.` 그럼에도 불구하고, `그 기술 부채 속에서도 유지보수를 가능케 하는 것도 능력이다.` 꼭 새로운 프로젝트, 신규 기능 개발만이 성과인 것이 아니다. 새로운 기술, 새로운 언어만이 나의 실력이 아닌 것이다.

[문제 없어요 증후군 (No-Problem Syndrome)](https://johngrib.github.io/wiki/no-problem-syndrome/)

- `NPS`에 대해 알게 되어 기분이 좋았다. 이러한 것도 문제라고 볼 수 있구나. `사실 일하면서 이러한 일들이 문제라고 이미 느끼고 있었다.` 문제 없다고 외치는 것은 본인에게만 좋은 일이다. 그리고, 무분별한 외침은 동료를 힘들게 한다.

[다시 찾아간 지표의 세계](https://cojette.github.io/metrics_revisited/)

- **데이터 사이언티스트**가 바라본 `지표에 관한 글`인데, 정말 유익하다.
- 지표에 대한 확실함을 잘 모르겠다고 일 하면서 기획자랑 많이 이야기를 했다. 이런 클릭이 왜 필요한지? 무엇이 중요한 것인지에 대해 심도 깊은 이야기를 못하는 서비스 개발자에게 아쉬운 영역이었다. 이 글을 읽다 보니 무엇이 목적인지? 중요하다는 생각을 하게 되었다. `허상지표와 실질지표의 구분도 정말 중요하구나`를 배웠다.

[지표를 바르게 사용하는 것](https://cojette.github.io/metric/)

- 지표에 관해 윗글을 읽다 아래 글을 읽게 되었는데, `지표에 관해 좀 더 명확하게 알게 되었고, 써주신 4가지에 대해 정말 감탄하게 되었다.`

### 💻JavaScript

[Front-End Dev Tools For increased Productivity](https://medium.com/better-programming/10-productivity-tools-for-front-end-developers-4021cdef6fcb)

- 프론트 엔드 개발 생산성에 도움을 주는 개발 도구 소개 글이다. (마크업적인 툴들이 많다.)

[Mistakes Junior React Developers Make](https://medium.com/frontend-digest/mistakes-junior-react-developers-make-c546b1af187d)

- 주니어 리액트 개발자가 하는 실수들에 대한 부분인데, 가장 민망한 건 `"충분히 테스트를 하지 않음"`에 대한 부분이었다.

[Unified Numberformat 맛보기](https://genie-youn.github.io/journal/proposal_unified_intl_numberformat_%EB%A7%9B%EB%B3%B4%EA%B8%B0.html?fbclid=IwAR2Pob_cnzojwY0fGfbVy6oR6IDqUqe5JajRuZUIo_Xr1AFdmrnU3TyHrTI)

- 숫자에 대한 포맷이 신규 스펙으로 제정 되었고, `stage 4`로 모던 브라우저에서는 반영이 될 예정인 `Unified Numberformat`의 소개이다.

[The Road to React [Book 2020] - RWieruch](https://www.robinwieruch.de/the-road-to-learn-react)

- `리액트를 배우는 책`으로 유명한데, 해당 책이 개정 되었다.

[GraphQL resolver testing - RWieruch](https://www.robinwieruch.de/graphql-resolver-testing)

- `GraphQL`의 `resolver`를 `jest`로 테스팅 하는 방법에 대해 소개 하고 있다. 리졸버는 테스트 하는 코드를 넣어 두는 것은 좋은 방법이 될 수 있겠다. 생각 했으나, `TDD`를 하기란 쉽지 않더라. 매번 반성한다.

### 💻Java

[JUnit5로 계층 구조의 테스트 코드 작성하기](https://johngrib.github.io/wiki/junit5-nested/)

- `BDD 테스트의 일종으로 D-C-I pattern의 테스트 코드 작성법에 대한 소개`이다. 해당 글을 읽으면서 오! 이렇게 하니까 정말 술술 읽히는 테스트 코드구나! 생각 하게 되었다.

[7 JVM arguments of Highly Effective Applications | Java Code Geeks - 2020](https://www.javacodegeeks.com/2020/03/7-jvm-arguments-of-highly-effective-applications.html)

- `Java` 어플리케이션의 도움을 주는 `JVM` 옵션들을 소개하는데, 기본적으로 추가 하는 부분들이 있고, 내가 써보지 않은 부분들도 있다. (timezone은 생소했다.) 각 옵션에 대해 잘 설명 하고 있다.

[Java IO vs NIO | Baeldung](https://www.baeldung.com/java-io-vs-nio)

- `Java IO/NIO`에 관한 글로, 굉장히 짧기 때문에 읽어 보면 좋다. 물론, 버퍼를 잘 다루는 방법은 소개 되어 있지 않지만, 제일 중요하다.

[Difference Between Thread and Virtual Thread in Java | Baeldung](https://www.baeldung.com/java-virtual-thread-vs-thread)

- `Thread와 Virtual Thread의 차이`에 대한 설명인데, 이해하기 쉽지 않았다. 여러번 읽어 보아야 하는데, `carrier thread`가 무엇인지는 나오지 않았다. 대충 이해한 바로는 가상 쓰레드가 실행 되는 공간이라고 이해 했다. 결론은 가상 쓰레드가 캐리어 쓰레드를 차단 하지 않기 때문에 비용이 훨씬 저렴하다는 것이 핵심 같았다.

[Java 14 Released](https://www.infoq.com/news/2020/03/java14-released/?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=Java)

- JDK 14 정식으로 릴리즈 되었다. 다양한 기능들이 대거 추가 되었다. `Pattern Matching, Switch Expression`등외 `JFR Event Streaming`이 추가 되었다. ([참고](https://openjdk.java.net/projects/jdk/14/))

[Ktor로 Todo 서비스 빠르게 만들기 | Popit](https://www.popit.kr/ktor%eb%a1%9c-todo-%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%b9%a0%eb%a5%b4%ea%b2%8c-%eb%a7%8c%eb%93%a4%ea%b8%b0/)

- `kotlin`의 경량 프레임워크인 `Ktor`로 `TODO` 어플리케이션 만들어보기 글이며, `kotlin`에 관심을 가지고 있는데, `Ktor`를 처음 알게 된 계기가 되었다.

### 🙌🏻일반적인

[매뉴얼은 세세하게, 화상회의는 매일, 평가는 아웃풋으로](http://www.ttimes.co.kr/view.html?no=2020030212077739708)

- `Gitlab`, `InVision`의 두 회사 이야기를 하는데, 두 회사의 업무 스타일과 원격 근무에 대한 문화를 소개 하고 있다.

[한계를 그만 뛰어넘을래](https://ppss.kr/archives/213811)

- 문득 `한계`에 부딪히는 일들이 많아 스트레스를 받는 분들이 읽어보면 좋겠다.

[성장하는 사람의 큰 특징: 설득의 자세](https://ppss.kr/archives/213121)

- 설득의 중요성에 대해 알 수 있는 글이다. 설득을 잘 하는 사람은 `영향력과 어떠한 근거가 있다는 것이다.`

[미니멀리스트 옷장을 만드는 10가지 방법들](https://ppss.kr/archives/214368)

- 패션에 대해서는 무지한데, 읽다 보니 공감을 많이 하게 된 글이다. `입을 옷은 적고, 옷걸이에 걸린 옷들은 많다면, 이 글이 도움이 되리라 생각 한다.`
