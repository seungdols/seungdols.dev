---
layout: post
title: '그냥 저냥 #위클리뉴스 #66'
description: '그냥 저냥 #위클리뉴스 #66'
date: 2020-02-24 23:28:00
category: weekly-news
tags: [weekly-news, programming]
comments: true
draft: false
---

### 🙏🏻개발자가 보면 좋은

[개발자 직장생활과 실력향상 관련 좋은 글](https://brocess.tistory.com/267)

- 조대협님의 글과 임백준님의 칼럼 두 글을 같이 인용한 글이다. 확실히 다 맞는 말이다. 하나를 선택 하라고 한다면, `"모든 것을 알아야 한다는 강박을 버려라"`를 선택하고 싶다. 자칫하면, 함정에 빠지기 쉬운 것이 지식의 학습 욕구이다.

[How to read technical books](https://medium.com/swlh/how-to-read-technical-books-35e3e02551c0)

[기능 공장에서 일하고 있다는 12가지 신호](https://cojette.github.io/featurefactory/)

- `몇 개의 부분들을 빼고 나면, 내가 속한 회사의 모습이긴 했다.` 역시, 기능 공장에 해당 하는 회사인가? 싶기도 했다. 그럼에도 불구하고, 이 곳에서의 장점은 확실하게 있긴 하다. **이 안에서 조금씩 변화를 만들어 가는 것이 좋다고 생각 한다. 하나씩 변화를 주는 방법을 찾아야겠다.**

[[번역] 마틴 파울러 CQRS 포스팅](https://medium.com/@joohotheman/%EB%B2%88%EC%97%AD-%EB%A7%88%ED%8B%B4-%ED%8C%8C%EC%9A%B8%EB%9F%AC-cqrs-%ED%8F%AC%EC%8A%A4%ED%8C%85-245c63bb1e58)

- `CQRS`에 대해 핵심을 정말 잘 설명하는 글이라고 생각 한다. 원문으로 읽어 보는 것도 추천한다. 물론 어렵긴 하다.

[원티드 제품 개발 5년의 기록](https://medium.com/wantedjobs/%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%A0%9C%ED%92%88-%EA%B0%9C%EB%B0%9C-5%EB%85%84%EC%9D%98-%EA%B8%B0%EB%A1%9D-d353b1231896)

- 원티드 서비스가 커 온 발자취를 알 수 있는 글인데, 정말 빠르게 서비스를 키워내고, `선택과 집중을 정말 잘 하는 기업이 아닌가?` 라는 생각을 했다. 사실 서비스 중심의 회사는 잘 할 수 있는 것과 굳이 하지 않아도 되는 부분들을 잘 구분 하는 것이 중요하다는 생각을 한다.

[처음 발표를 준비하는 개발자들이 알아두면 좋을 것들](https://rinae.dev/posts/things-to-know-when-you-prepare-presentation-first-time)

- `발표에 대한 A-Z`를 정말 잘 정리 해주셨다. 발표를 할 기회가 있다면 꼭 이 내용을 숙지 하도록 하자.

[들어는 보았나 몹 프로그래밍!](https://helloworld.kurly.com/blog/mob-programming/)

- 페어 프로그래밍도 해본 적 없는 **나에게는 생소하지만**, 몹 프로그래밍을 하게 되면, 좋은 경험을 많이 하게 될 것 같다. (`약간은 부럽기도 하다. 물론, 막 검색하고, 그런 취향이 있기 때문에 민망할 것 같기도 하다.`)

[배달의민족 최전방 시스템! '가게노출 시스템'을 소개합니다. - 우아한형제들 기술 블로그](https://woowabros.github.io/experience/2020/02/19/introduce-shop-display.html)

- `Spring framework 5`의 `WebFlux`를 정말 잘 쓰는 조직이 아닐까? 하는 생각이 이 글을 읽고 난 뒤에 깨달음이었다. `나는 기술을 이렇게 쓰고 있는 걸까? 하는 이유 모를 부끄러움도 있었다. 나는 어쩌면, 굉장히 얕은 수준의 기술만 쓰는 사람 인지도 모르겠다는 생각과 함께 이런 고차원적인 방법도 중요하구나?` 라는 생각을 하게 되었다.

[코로나인포 개발기: 프론트엔드 편](https://velog.io/@croco_space/making-coronas-info-frontend)

- 코로나 바이러스 관련 정보를 위한 `코로나 인포`의 프론트엔드를 담당 했던 분의 개발 공유이다.

[Illustrated.dev](https://illustrated.dev/)

- `일러스트를 통해 웹 개발에 대해 설명`을 하고 있는데, 퀄리티가 좋고 그림으로 이해할 수 있어서 정말 좋다.

[자바스크립트 성능 향상 방법](https://junwoo45.github.io/2020-01-29-javascript_performance/?fbclid=IwAR1FEZN572tgnZnYzKShCOEU6cqy9Ql7JQSs4MCt9NChK7nC83yU4XjkYjk)

- 일전에 공유 했었던, `자바스크립트 성능 향상 방법`의 번역글입니다.

[patch-package를 활용한 NPM 패키지 패치(patch) 사례 (feat. React Native)](https://medium.com/naver-place-dev/patch-package%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-npm-%ED%8C%A8%ED%82%A4%EC%A7%80-%ED%8C%A8%EC%B9%98-patch-%EC%82%AC%EB%A1%80-feat-react-native-ee1fc399b7c2)

- `의존하는 모듈의 수정을 한 경우에는 어떻게 관리를 해야 할까?` 하는 고민이 있을 때, 참고 하면 좋겠다. 물론, 오픈 소스를 주로 사용하니 직접 수정 PR을 보내는 방법이 있는데, 시간이 급한 경우 정말 유용하지 않을까?

[코로나 실시간 뉴스 알림 챗봇 만들기 COVID19NEWS BOT](https://miryang.dev/2020/02/21/covid19newsbot/)

- 크롤 방식 보다는 `RSS`를 이용해 다음 뉴스 데이터를 가져오는 방식을 이용하여 키워드에 대한 뉴스 알림 봇을 개발한 경험기 공유이다.

[안심번호 마이크로서비스 개발하기](https://medium.com/daangn/%EC%95%88%EC%8B%AC%EB%B2%88%ED%98%B8-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B0%9C%EB%B0%9C%ED%95%98%EA%B8%B0-fb1a8817b059)

- 당근 마켓의 안심 번호 마이크로 서비스 개발하며, 겪은 점이 정리 된 글이다. 다만, 왜 gRPC로 통일 하려고 하는지는 잘 모르겠다.

[IT기자, 개발자로 돌아오다...CODEF 합류 10개월 후기 - 오세용닷컴](http://ohseyong.com/?p=2265)

- `IT기자에서 개발자로 다시 돌아와 일 한 후기에 대한 글`인데, 난 이런 경험 같은 글들이 많아 졌으면 좋겠다. 경험은 사실 귀중한 자료이기 때문에, 감정이나 어떤 노력에 대한 부분들이 더 자세 할 수록 좋다고 생각 한다.

[오픈서베이 개발팀은 어떤 과제를 해결하고 있을까?](https://brunch.co.kr/@mobiinside/2008)

- **시스템 구조와 회원 시스템 개편에 대한 공유 글이며, 쉽지 않은 일들은 해내는 개발팀이구나!**라는 생각을 하게 되었다.

[멀티 쓰레드 프로그램 설계를 위한 8가지 규칙](https://brunch.co.kr/@chris-song/95)

- 동시성의 예술이란 책의 4장에 나오는 내용을 번역한 글입니다. `이 책의 번역본을 찾아 봐야겠다`는 생각을 하게 되었습니다.

### 🖥Java

[Querydsl Projection 방법 소개 및 선호하는 패턴 정리 - Yun Blog | 기술 블로그](https://cheese10yun.github.io/querydsl-projections/)

- `QueryDSL Projection`에 대해 선호 하는 패턴 정리 글인데, 써보진 않아서 와 닿지는 않지만, `JPA + QueryDSL`을 쓴다면, 이 글을 참고 해보는 것도 좋겠다.

[Spring WebFlux와 Armeria를 이용하여 Microservice에 필요한 Reactive + RPC 동시에 잡기](<[https://d2.naver.com/helloworld/6080222](https://d2.naver.com/helloworld/6080222)>)

- Spring framework5의 WebFlux와 Armeria에 대해 잘 소개 하고 있는 글이며, RPC를 쓰면 왜 성능이 더 빨라지는지에 대해서는 설명이 없어서 조금은 아쉽다.

### 💻JavaScript

[타입스크립트 기초 연습](https://velog.io/@velopert/typescript-basics)

- 리액트를 쓰면서 `TypeScript`를 안 써 본 분들이라면, **이 글을 읽고 적용 해보는 것도 좋아 보인다.** 자세하게 잘 정리 되어 있다. `물론, 리액트를 공부 하는데에는 타입 스크립트가 굳이 필요하진 않다.`

### 🛠Tool

[evanw/esbuild](https://github.com/evanw/esbuild/)

- `go`로 개발 된 번들러인데, 속도가 정말 어마어마하게 빠르다고 벤치 마크에 나와 있다.

[m3db/m3](https://github.com/m3db/m3)

- 우버에서 개발하여 오픈 소스로 만든 메트릭 솔루션인데, 시계열DB까지 모두 오픈 소스로 공개 했다. 프로메테우스랑도 연동이 가능해보이며, 쿼리 엔진까지 탑재 되어 있다.

[heelhook/chardin.js](https://github.com/heelhook/chardin.js)

- 이미지 위에 `사용법에 대해 설명 하는 레이어를 오버레이 형태`로 표현 할 수 있게 해준다.

[Panolens.js](https://pchen66.github.io/Panolens/)

- `360도` 파노라마 뷰 `JavaScript` 라이브러리이고, 해상도가 높은 이미지에 적합하다고 생각 한다.

[getgauge/taiko](https://github.com/getgauge/taiko)

- `Node.js` 기반의 웹 테스팅 라이브러리인데, `smart selector`와 `레코딩 기능`이 탑재 되어 있어, 간편하게 만들어 코드를 통해 지속적인 테스팅을 할 수 있어 좋아 보인다.
