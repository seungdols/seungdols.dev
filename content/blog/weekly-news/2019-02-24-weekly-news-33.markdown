---
layout: post
title: 'Weekly News #33'
description: '그냥 저냥 #위클리뉴스 #33'
date: '2019-02-24 20:30'
tags: [weekly-news, programming]
category: 'weekly-news'
comments: true
draft: false
---

## 개발자가 읽어야 할

['HTTP/3 explained' 한국어 번역 :: Outsider's Dev Story](https://blog.outsider.ne.kr/1430): outsider님이 번역해주셨고, 지금은 마스터 브랜치에 머지가 된 상태로, 다양한 확장자의 버전으로 HTTP/3예 대한 내용을 확인 할 수 있게 되었다. 개발자라면 네트워크도 빼놓을 수 없고, 더군다나 **HTTP/3**라면 무조건 봐야 할 내용이라고 생각하기에 이번에 HTTP 스터디를 하는 시간에 위의 내용도 공유하고, 스터디원들이랑 확인 해야봐야겠다.

[[번역] UI는 좀 이따 생각해봅시다](https://adhrinae.github.io/posts/ui-as-an-afterthought-kr): 결론적으로 나는 이 글의 일부만 이해를 했는데, 중점이 되는 핵심은 내가 화면 개발을 비즈니스로 생각한다는 점이다. 그런데, 이 글에서 그러한 생각을 무자비하게 깨부숴버린다. 결국, 화면을 만드는 것은 사용자 인터페이스에 지나지 않는데, 어떤 라이브러리, 어떤 기술을 사용하건 비즈니스 프로세스와 사용자 인터페이스는 강하게 접착되어 있다면, 상태 관리를 위해 많은 비용을 지불 해야 한다는 말로 이해했다. 결론적으로 앞으로 회사에서 일 할때에도 어떻게 일을 하고 있는지 다시 한 번 생각 해봐야겠다.

[[B급 프로그래머] 다음 자바스크립트 코드에서 오류는?](http://jhrogue.blogspot.com/2019/02/b.html): **JavaScript**를 좀 쓰는 편인데도 보고 바로 답을 맞추진 못했다는 사실에 반성을 하게 된다. 그럼에도 불구하고, 못 맞춰도 어떠랴! 결국에는 이런 교훈을 나도 잘 새겨놓고, 다음에 실수 하지 않으면 되는 것이라 생각했다. 그런데, 세미 콜론과 **JavaScript**관련해서는 또 정리 해두면 좋을 것 같다는 생각을 했다.

[내 맘대로 위클리 뉴스 - 2019년 7주(2019.2.11 - 2019.2.17)](https://www.sangkon.com/2019/02/17/sigamdream_weekly_2019_7/): java11을 사용하는데에 있어서 Jigsaw를 잘 활용하기 위한 아티클이 좋았고, `Vue.js`를 활용하는 기사도 요즘의 관심을 갖고 있는 주제여서 참 좋았다. 그 외 다양한 기사들이 소개 되었다.

[[jenkins] pipeline, multi-branch, ocean 링크 모음](https://knight76.tistory.com/3913): jenkins pipeline에 대한 링크를 잘 모아둔 건데, 요즘 회사에서도 이렇게 구성해서 사용하는 곳을 많이 봤다. 그리고 앞으로 jenkins를 pipeline의 형태로 사용하는 것이 좋다는 것이 내 생각이다. 훨씬 좋다... (기능도 너무 많기 때문에...)

[[B급 프로그래머] 2월 3주 소식(개발/관리도구, 고성능 서버/데이터베이스 부문)](http://jhrogue.blogspot.com/2019/02/b-2-3.html): git 사용을 하다가 만나는 이슈들에 대해서 잘 정리 해준 글이 있는데, 정말 좋은 내용이 많고, 매번 겪는 문제라고 생각하는 사례를 잘 정리 해주셨다. 그 외 다른 소식들이 많아서 읽어볼만 하다.

[테마 스위치 기능 추가하기](https://jbee.io/web/apply-theme-to-web/): 다크 모드를 지원함으로써 생기는 중복된 CSS 처리 코드를 어떻게 한 번에 해결 할 수 있는지? 블로그에 직접 적용해보고, 후기를 남겨주셨다. 역시 요즘은 `SASS`의 인기가 많아졌고, 리액트의 덕분이기도 한건가? 싶다는 생각을 하게 된다. 물론 리액트 이전에도 사용해왔다.

[Shopify 아키텍처의 진화](https://blog.gaerae.com/2019/02/evolution-of-shopifys-architecture.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+GaeraeBlog+%28%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%8A%A4%EB%9F%BD%EB%8B%A4%29)

[vim 에서 python 개발을 위한 편집](http://mcchae.egloos.com/11321964): 보통은 IDE를 많이 사용하지만, 그렇지 않고 터미널상에서 바로 개발해야 하는 상황도 있다. 물론, 그럴때는 `vim`만한 것이 없다. 그럴 경우에 해당 셋팅을 참고하여 `python`개발을 하도록 하자!

## React

[Intro](https://t.co/67NQF1etVJ): `React` 내부를 이해하기 위한 번역글이다. 어떤 시스템적인 로직으로 돌아가는지 궁금하다면, 이 글을 읽어보는 것을 추천한다. (영어를 잘 하신다면, 영어로 검색하면 많은 자료가 나온다.)

## ML

[이펙티브 텐서플로 2.0](https://tensorflow.blog/2019/02/21/%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C-%ED%85%90%EC%84%9C%ED%94%8C%EB%A1%9C-2-0/): 텐서플로 2.0의 번역본 링크가 있고, 해당 2.0에서는 어떤 것이 변화 했는지를 알 수 있도록 간략하게 요약 되어 있다.

## Docker etc

[Dockerfile을 이용해서 이미지 생성하기](http://sqlmvp.kr/221466141701): docker file을 이용해서 이미지를 생성 하는 방법을 스크린샷도 남기며 친절하게 설명해주셨다. 그리고 유의사항까지 팁으로 남겨 주셨다.

[Docker Compose - 여러개의 컨테이너를 설정하고 생성하기](http://sqlmvp.kr/221468557041): 여러개의 컨테이너를 설정하는 방법을 하나의 yml 파일로 만들고, 해당 파일을 docker compose로 실행 시키면 여러 개의 컨테이너가 동시에 설정되고, 실행 되는 것인데, 예시로 살펴볼 수 있다. 그런데 결국은 공식 문서를 참고하는 것이 중요하다. 굉장히 많은 옵션이 지원 되기때문이다.

[[Docker] 도커 기초 명령어 익히기](https://www.bsidesoft.com/?p=7851): 기본적인 도커 사용에 관련하여 설명하고 있는데, 처음 입문한다면 이 글을 따라 해보는 것이 좋을 것 같다. nginx, terminal 사용등 좋은 예시가 많다. 나도 요즘 도커를 실무에 도입하고자 혼자서 보고 있는 중이다. 그런데, 참 도커는 매력적인 도구라는 생각이 든다. 도입하면 정말 편해질 수 있다는 생각이 든다.

[[Docker] 도커 소개와 우분투에 Docker CE 설치하기](https://www.bsidesoft.com/?p=7820): 실제 우분투 서버에 도커를 설치하는 방법을 상세하게 소개하는데, 도커를 설치할 수 있는 OS 버전을 꼭 체크해야한다.

[[Docker] 인텔리제이에서 도커로 배포하기](https://www.bsidesoft.com/?p=7871): spring boot 프로젝트를 데모로 만들고, 해당 데모를 _jib_ 라이브러리를 이용해서 도커 이미지를 만들어내는데, 정말 간편해보인다. 물론, 로컬에서는 이렇게 하기가 어렵지만, 개발서버로에선 이런 방식을 활용 할 수 있을 것 같다.

[[Ubuntu] 18.04 docker 명령을 sudo 없이 실행하기, systemctl restart](http://mcchae.egloos.com/11322041): `sudo` 키워드 없이 도커 명령어를 실행하는 방법이다. 처음 셋팅을 이렇게 해두면 정말 편리하다. 작은 4글자지만, 매번 쳐야 하는 것은 정말 귀찮다.

## 개발자에게 도움이 되는

- [공감하고 공유하는 프로그래머: 모든 지식은 하나 : 네이버 블로그](http://skillsocius.com/221468321700): 글쓴이의 엄청난 경험과 다수의 개발 경력으로 얻은 인싸이트를 토대로 5년차 개발자에게 추천하는 것들에 대함인데, 나에게 참 와닿는 말이 너무 많았고, 글쓰신 분이 얼마나 큰 고민을 많이 해오셨고, 그 고민들을 어떻게 해결했는지가 글 속에 녹아있다. 그리고 **내가 코더로 사는 이유**, **2018년, 내가 모르는 기술들**라는 글을 읽어보시길 추천합니다.

- [It's a Kind of Magic: Kinds in Type Theory - DZone Java](https://dzone.com/articles/its-a-kind-of-magic-kinds-in-type-theory?utm_medium=feed&utm_source=feedpress.me&utm_campaign=Feed:%20dzone%2Fjava): 타입 이론에 대한 내용인데, 생각보다 쉽지 않고 이미 타입 이론에 대한 정보를 알고 있어야 이해 할 수 있는 내용이 많아서 아직은 이해가 어렵다. 결국은 함수형 프로그래밍, 하스켈을 깊게 파면 팔수록 수학으로 귀결 된다는 말이 사실이라는 답을 얻었습니다. :/ 그럼에도 불구하고, 공부하는 개발자가 되려면, 놓칠 수 없는 내용이라 킵해두기 위해 가져왔습니다. (페이지의 일부만 이해함.)

- [Top 7 Soft Skills for Developers in 2019](https://www.javacodegeeks.com/2019/02/7-soft-skills-developers-2019.html): 이 글을 한 번 번역해보고 싶다는 생각을 품었는데, 이번주에 번역할 수 있다면 해봐야겠다. 영어이지만, 읽어보면 좋은 내용이라 공유드립니다.

## 일반적인

- [작지만 확실한 하루를 보내기 위한 5가지 제안](https://ppss.kr/archives/186438): 비교적 쉽게 활용 할 수 있는 5가지의 목표에 대한 이야기인데, 나는 항상 내 할일을 할때만 체크 하고, 하지 못했을 경우에는 어떤 이유로 못했는지는 체크 하지 않았는데, 어떤 이유로 못했는지를 체크 하는 방법을 배우게 되었다. 목표를 이루는데에 방해물과 하지 못한 이유를 상기 하는 것도 중요한 것이라 생각하게 되었다.

- [노션, 그리고 워크플로위](https://ppss.kr/archives/186430): 워크 플로위는 제대로 사용해본적은 없고, 어느정도 사용해본 경험은 있는데, 나는 완전 하드한 에버노트 유저라, 원페이지에서 Depth가 깊어지는 관리를 잘 못하겠더라. 그런데, 생각해보면 사람의 생각이 꼬리에 꼬리를 무는 방식과 유사한 것과 같다는 생각을 이 글을 읽으면서 하게 되었다. *notion*을 과금해서 사용중인데, 코드를 작성하는 용도, 여행 관련 계획에 주로 사용하고 있다. 그런데, 점점 에버노트가 시시해지는데, 이 것은 *Bear*로 가야 하는건지 의문이 들었지만, 지금 사용하는 수준으로는 Notion + Evernote 조합이 좋다고 생각하는데, 여기에 업무를 위해서 워크 플로위를 사용해볼까 고민중이다.

- [요즘 ‘쿠팡’에서만 쇼핑하게 되는 이유](https://ppss.kr/archives/187388): 쿠팡의 초기 모델인 로켓배송은 이미 다른 배송 서비스 사업자들도 진행하고 있는 아이템이었다. 그런데, 가격 이상이 되어야하는 로켓 배송의 단점으로 인해, 다른 앱에서 물건을 사거나 하곤 했는데, 이제는 **로켓 와우**의 등장으로 인하여 더 나은 로켓 배송이 되어 버렸다. 그러면서 배송비에 대한 자유로움이 쿠팡을 더 완벽케 만드는데 일조를 했다고 판단한다. 이 글의 글쓴이도 그렇게 설명하고 있으면서 네이버 페이에 버금가는 **로켓 페이의 등장**으로 물품을 사는데 몇 분이 소요되는 시대가 아니다. 이제는 고르고, 결제가 원스톱으로 이루어진다. 그런데 배송비까지 사라지게 만드는 구독 모델을 도입함으로써 쿠팡의 새로운 비즈니스 모델이 생겼다고 생각하게 된다. 그리고 손정의 회장은 절대 가치 없는 곳에 돈을 쓰지 않는다. 그는 돈을 의미 있는 곳에 투자한다. 쿠팡이 앞으로 보여줄 무언가가 또 남았는지가 궁금해진다.
