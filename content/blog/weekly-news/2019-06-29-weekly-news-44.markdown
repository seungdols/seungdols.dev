---
layout: post
title: '그냥 저냥 #위클리뉴스 #44'
description: '그냥 저냥 #위클리뉴스 #44'
date: 2019-06-29 18:52:00
category: weekly-news
tags: [weekly-news, programming]
comments: true
draft: false
---

### ElasticSearch

- [Elasticsearch의 색인 별명 활용 팁](https://www.ridicorp.com/blog/2018/11/20/index-aliases/)

  - 최근 서비스 개편을 진행함과 동시에 특정 데이터의 개편 또한 같이 변경 되어, ES의 색인과 Query등에 급작스럽게 공부하게 되었다. `Index alias`를 변경 해야 하는데, QA를 진행중이라 접근이 끊기면 안되기 때문에, atomic 하게 변경이 되어야 했다. 찾아보니, `add, remove`를 같이 action으로 넣어 주면 끊기지 않고 정확하게 잘 동작하게 된다고 한다.

- [Elasticsearch from the Bottom Up, Part 1](https://www.elastic.co/kr/blog/found-elasticsearch-from-the-bottom-up)

  - ElasticSearch의 기본이 되는 Index인 Inverted Index, Building Index, Indext Segments에 관한 설명이다. 시간이 나면 조금 더 기본적인 원리를 찾아서 이해하고 싶기는 하다.

- [Elasticsearch from the Top Down](https://www.elastic.co/kr/blog/found-elasticsearch-top-down)
  - ElasticSearch의 기본인 Cluster, Node, Routing, Coordinators등에 관해서 소개 하고 있는 글이다. Coordinator와 Primary, Replica와의 관계에 대해 알 수 있다.

### 개발자에게 도움이 되는

- [Merge 기념일 - Cho Eun - Medium](https://medium.com/@euncho/merge-%EA%B8%B0%EB%85%90%EC%9D%BC-cbf1e6ed663c)

  - 조은님의 Merge 회고라고 생각하면 좋은데, 마크업 개발자가 FE로 나아가는 회고 글이라, 많은 분들이 읽어보면 좋겠다 싶었다. 내가 아는 것과 모르는 것을 잘 인지하고 있어야 하는 점과 모르는 부분은 알아가는 노력을 하는 점이 멋있다고 생각한다.

- [「프로그래머의 배움」 발표자료 공개](https://ahnheejong.name/articles/programmers-learning/)

  - 안희종님이 GDG 행사에서 발표하신 내용인데, 좋은 내용이 참 많았다. 프로그래머의 배움이라는 주제와 팀원에 대한 이야기가 주로 많았는데, `정말 중요한 내용은 혼자서 하는 일이 아니라는 부분`이 제일 공감이 간다.

- [Git 계정 여러 개 동시 사용하기 :: Outsider's Dev Story](https://blog.outsider.ne.kr/1448)

  - Git 계정을 여러 개 쓰는 일이 없을 것 같지만, 회사에서는 **Github Enterprise**를 쓴다면, 훨씬 복잡해진다. 물론, 아예 컴퓨터를 분리하면 속 편하긴 하다. 다만, 인생은 계획 대로 되지 않는다. 개인 컴퓨터로 회사 일을 해야 할 때가 있고, 하다 보면 서로 `commit` 정보가 뒤바뀐 채로 `commit` 되는 일이 빈번 해지는데, 그러한 것을 잘 관리 하고 싶다면, 읽어보면 좋다.

- [React Hooks + TS + functional = 아름다움](https://speakerdeck.com/ryunzae/react-hooks-plus-ts-plus-functional-equals-areumdaum)

  - React의 Hooks에 대한 소개와 클래스 컴포넌트와의 비교를 코드로 소개하기에 굉장히 쉽게 이해 할 수 있다. 특히, `useState(() ⇒ func())`를 해주면, 최초 한 번만 수행 한다는 점도 알고 있어야 삽질을 줄일 수 있다.

- [UX빼면 시체, 프런트엔드](https://speakerdeck.com/jaeyeophan/uxbbaemyeon-sice-peureonteuendeu)

  - Jbee님의 발표 자료인데, 굉장히 많은 공감을 하는 내용이 있다. 내가 프런트 서비스를 개발 하면서 느끼는 점은 왜 하나 같이 UX에 관해서는 하나도 신경 쓰지 않는지? 서비스 개편을 일 년에 두 번씩은 최소한 하는데, 그때마다 `사용자 경험이 왜 무시 되는지 이해가 가지 않았다.` **이는 기획자, 디자이너, 개발자가 모두 해당 서비스를 안 쓰기 때문이다.** 라는 결론에 도달 했다. FE를 책임 지는 개발자라면, UX를 신경 써야 하는 건 정말 맞는 말이다.

- ['React, TS, Electron Application 개발하면서 내가 실수한 것들'](https://drive.google.com/file/d/1xdqenyrCJ8IC614WFsYEbh6HbywUXacC/view)

  - `QueryPie`라는 툴을 만들면서 겪었던 이슈등에 대해 원인과 해결방안에 대해서 상세하게 정리 되어 있고, 실제 코드를 확인 해볼 수 있다. `Electron.js`를 사용하는 분들이라면, 관심 가지고 보면 좋겠다.

- [[우아한테크코스] 1주차 미션 리뷰 후기](https://www.notion.so/cd9436bd2b6b4d8cb1509037e08a8820)
  - Java에 관한 미션을 진행 한 뒤에, 코드 리뷰를 받은 후기를 공유 해주셨는데, 나도 이런 코스가 있었다면, 무조건 했을 텐데.. 그게 좀 아쉽긴 하다. 내가 취업할 때만 해도 우아한 형제들은 경력직만 뽑았기에, 조금 아쉬움이 남는다. 좋은 가르침과 방향성을 일찍 경험 할 수 있다면, 빠르게 성장하는데 도움이 되기에 부럽기도 하면서 좋은 내용이 많아서 도움이 많이 되었다.

### Container

- [분산 컨테이너 환경에서의 디자인 패턴 (1)](http://swalloow.github.io/container-patterns)
- [분산 컨테이너 환경에서의 디자인 패턴 (2)](http://swalloow.github.io/container-patterns2)
- [분산 컨테이너 환경에서의 디자인 패턴 (3)](http://swalloow.github.io/container-patterns3)

  - 분산 컨테이너 환경을 활용하는 개발자들에게 필요한 컨테이너 디자인 패턴에 관한 번역글이다. 요즘은 또 클라우드 환경으로 서비스를 많이 하기 때문에, 활용하면 좋은 포인트들이 있다. 앰배서더 패턴등, 멀티 노드 서빙 패턴등 활용 하기 좋다.

- [[면접] 개발자 면접관을 감동시키는 면접](http://blog.hwang.gg/20190627/)
  - 면접을 보게 된다는 것은 회사에 소개팅을 하러 가는 것과 같은데, 당시에는 탈락을 하더라도 좋은 인상을 남기게 되면, 추후에 다시 연락이 올 수도 있다. **사람의 연**이 라는 것이 본래 그렇다. 그렇기에 최대한 좋은 인상을 남기는 것이 좋다. 가장 좋은 것은 `내가 얼마나 협업을 잘 할 수 있는지? 내가 아는 지식과 모르는 지식을 잘 구분하고 있는지가 제일 중요하다고 생각한다.`

### Git

- [Git을 이용한 협업 워크플로우](https://lhy.kr/git-workflow)
  - Git을 잘 쓰는 것도 굉장히 어렵다. 여러 사람들과 함께 사용하다 보면, 문제가 많이 발생한다. `long-live branch`를 `master branch (stable branch)`로 `merge` 하는 것과 `stable branch`의 내용을 지속적으로 `long-live branch`에 반영하는 것도 어렵다. 잘못하면, 꼬이기 쉽다. 그래서 협업 워크 플로우를 잘 정의 하는 것이 Git으로 인한 이슈 발생을 최소화 하는 지름길이다. (한 번 꼬이면, 해결 하기 정말 어렵다. 특히, 여러 부서가 같이 사용하는 저장소라면, 해결하는 것은 헬이다.) 그래서 최근에 가장 내 생각에 알맞는 것은 `git flow`를 통한 방법이 제일 깔끔해보인다.
